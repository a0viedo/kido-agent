#!/usr/bin/env node

// Module's dependencies 
require("simple-errors");
require("../lib/customizeWinston");

var os			= require("os");
var winston     = require("winston");
var readLine    = require ("readline");
var agent       = require("../lib/agent");
var pkg			= require("../package.json");
var timeout;

process.title = pkg.name;

winston.info("node version", process.version);
winston.info("process title", process.title);
winston.info("process version", pkg.version);
winston.info("process platform", process.platform);
winston.info("process arch", process.arch);
winston.info("os platform", os.platform());
winston.info("os arch", os.arch());

// Catch any unhandled exception
process.on('uncaughtException', function (err) {
    winston.debug(err.message, Error.toJson(err));
    winston.error('An error ocurred', err.message);
    process.exit(1);
});

process.exitCode = 1;

initialize();

function watchAgent() {
    "use strict";
    var retryDelay = 300000;
    //just a safety measure
    winston.info('Trying to initialize again in ' + retryDelay/1000 + ' seconds...');
    if (!timeout) {
        timeout = setInterval(function () {
            winston.info('Creating a new instance of the agent.');
            initialize();
        }, retryDelay);
    }
}

function initialize() {
    // creates an agent instance
    agent = new Agent();
    agent.on("connect", function () {
        clearInterval(timeout);
        timeout = undefined;
    });
    agent.on("disconnect", function () {
        watchAgent();
    });
    agent.initialize(function (err) {
        if (err) return winston.error("Couldn't initialize agent instance.", err);

        // authenticates the agent against kidozen using configured credentials
        agent.authenticate(function (err) {
            if (err) {
                winston.error("Couldn't authenticate the agent against KidoZen services.", err.message);
                winston.debug(err.message, Error.toJson(err));
                return watchAgent();
            }

            // starts the agent intance
            agent.start(function (err) {
                if (err) return winston.error("Couldn't start agent instance.", err);

                process.on('SIGINT', function () {
                    agent.removeAllListeners('disconnect');
                    agent.stop(function () {
                        process.exitCode = 0;
                        process.exit();
                    });
                });
            });
        });
    });
}

