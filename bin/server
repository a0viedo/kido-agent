#!/usr/bin/env node

// Module's dependencies 
require("simple-errors");
require("../lib/customizeWinston");

var os          = require("os");
var winston     = require("winston");
var readLine    = require ("readline");
var agent       = require("../lib/agent");
var pkg         = require("../package.json");

process.title = pkg.name;

winston.info("node version", process.version);
winston.info("process title", process.title);
winston.info("process version", pkg.version);
winston.info("process platform", process.platform);
winston.info("process arch", process.arch);
winston.info("os platform", os.platform());
winston.info("os arch", os.arch());

// Catch any unhandled exception
process.on('uncaughtException', function (err) {

    winston.error ("An error ocurred.", err);

    if (agent) {
        agent.stop(function() {
            process.exit(process.exitCode);
        });
    }
});

process.exitCode = 1;
process.on('exit', function() {
    if (process.exitCode!==0) {
        winston.error();
        winston.error();
        winston.error("If you continue to have problems to run the agent, please contact the support with the 'agent.log' file at support@kidozen.com.");
        winston.error();
        winston.error();
    };
    winston.info ("bye!");
});


if (process.argv.indexOf("--version") > -1) {
    process.exitCode = 0;
    process.exit(0);
    return;
}

// creates an agent instance
var agent = new Agent();

// initializes the agent instance
agent.initialize(function (err) {
    if (err) return winston.error("Couldn't initialize agent instance.", err);

    // authenticates the agent against kidozen using configured credentials
    agent.authenticate(function (err) {
        if (err) return winston.error("Couldn't authenticate the agent instance against KidoZen services.", err);

        // starts the agent intance
        agent.start(function (err) {
            if (err) return winston.error("Couldn't start agent instance.", err);

            //Windows doesn't emit SIGNINT on CTRL+C
            //We use readline to listen to that event
            if (process.platform === "win32"){
                var rl = readLine.createInterface ({
                    input: process.stdin,
                    output: process.stdout
                });

                rl.on ("SIGINT", function (){
                    process.emit ("SIGINT");
                });
            }

            // Wait for a Ctrl+C (SIGINT) to exit
            winston.info (os.EOL + os.EOL + 'Press Control-C to exit.' + os.EOL + os.EOL);
            process.on('SIGINT', function() {
                winston.info ("stopping agent instance");
                agent.stop(function() {
                    process.exitCode = 0;
                    process.exit();
                });
            });
        });
    });
});

